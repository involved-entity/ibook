services:
  postgres:
    image: postgres:17-alpine
    container_name: ibook_postgres
    env_file: ".env"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app_network

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - app_network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: ibook_rabbitmq
    ports:
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    env_file: ".env"
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app_network

  backend:
    build:
      context: ./
      dockerfile: Dockerfile
    volumes:
      - ./core:/app/core
      - ./tests:/app/tests
      - ./alembic:/app/alembic
    ports:
      - "8000:8000"
    depends_on:
      rabbitmq:
        condition: service_started
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - ./.env.docker
    networks:
      - app_network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    networks:
      - app_network

volumes:
  postgres_data:
  rabbitmq_data:
  pgadmin_data:
  redis_data:

networks:
  app_network:
